#!/bin/bash

#  1. encrypt file
#  2. decrypt file and verify integrity after decryption
#  3. create sha256 of the encrypted file

usage() {
    PROG=$(basename $0)
    echo "$PROG: Encrypt INFILE and generate checksum.
OUTFILE defaults to \"\$INFILE.gpg\"

Usage: $(basename $0) INFILE [OUTFILE]
"
    exit 1
}

abort() {
    exit 1
}

if [[ $# -lt 1 || $# -gt 2 ]]; then
    usage
fi

original_file="$1"
encrypted_file="$2"

if [[ -z "$encrypted_file" ]]; then
    encrypted_file="$original_file.gpg"
fi

decrypted_file="$original_file.decrypted"
checksum_file="$encrypted_file.sha256"

gpg -c --no-symkey-cache --output "$encrypted_file" "$original_file"
if [ ! $? -eq 0 ]; then
    echo "Failed to encrypt. Aborting"
    abort
fi

gpg -d --no-symkey-cache --output "$decrypted_file" "$encrypted_file"
diff "$original_file" "$decrypted_file"
if [ ! $? -eq 0 ]; then
    echo "Encryption integrity verification failed. Aborting"
    abort
fi

sha256sum "$encrypted_file" >"$checksum_file"
sha256sum --quiet -c "${checksum_file}"
if [ ! $? -eq 0 ]; then
    echo "Failed to create sha256 of the encrypted file. Aborting"
    abort
fi
